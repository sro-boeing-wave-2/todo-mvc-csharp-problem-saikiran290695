// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticeApplication.Models;

namespace PracticeApplication.Migrations
{
    [DbContext(typeof(NotesContext))]
    partial class NotesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PracticeApplication.Models.CheckList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("CheckList");
                });

            modelBuilder.Entity("PracticeApplication.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("PracticeApplication.Models.Notes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message");

                    b.Property<string>("Title");

                    b.Property<int?>("checklistId");

                    b.Property<int?>("labelId");

                    b.HasKey("Id");

                    b.HasIndex("checklistId");

                    b.HasIndex("labelId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("PracticeApplication.Models.Notes", b =>
                {
                    b.HasOne("PracticeApplication.Models.CheckList", "checklist")
                        .WithMany()
                        .HasForeignKey("checklistId");

                    b.HasOne("PracticeApplication.Models.Label", "label")
                        .WithMany()
                        .HasForeignKey("labelId");
                });
#pragma warning restore 612, 618
        }
    }
}
